#include "stdafx.h"

#include "System/Components/Drawing/DrawObject.h"

#include "System/Managers/DrawManager.h"

////////////////////////////////////////////////////////////////////////////////
DrawObject::DrawObject()
{
}

////////////////////////////////////////////////////////////////////////////////
DrawObject::~DrawObject()
{
}

////////////////////////////////////////////////////////////////////////////////
const DrawParameters& DrawObject::GetDrawParameters() const
{
	return m_DrawParameters;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::Reset()
{
	m_DrawParameters.Reset();
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::Draw() const
{
	DrawManager::Instance().DrawTexture(m_DrawParameters);
}

// Getters

////////////////////////////////////////////////////////////////////////////////
Point DrawObject::GetPos() const
{
	return m_DrawParameters.Position;
}

////////////////////////////////////////////////////////////////////////////////
int32_t DrawObject::GetWidth() const
{
	return m_DrawParameters.Width;
}

////////////////////////////////////////////////////////////////////////////////
int32_t DrawObject::GetHeight() const
{
	return m_DrawParameters.Height;
}

////////////////////////////////////////////////////////////////////////////////
Rectangle DrawObject::GetPosRect() const
{
	return
	{
		m_DrawParameters.Position.x,
		m_DrawParameters.Position.y,
		m_DrawParameters.Width,
		m_DrawParameters.Height
	};
}

////////////////////////////////////////////////////////////////////////////////
Rectangle DrawObject::GetFrameRect() const
{
	return m_DrawParameters.FrameRect;
}

////////////////////////////////////////////////////////////////////////////////
int32_t DrawObject::GetOpacity() const
{
	return m_DrawParameters.Opacity;
}

////////////////////////////////////////////////////////////////////////////////
int32_t DrawObject::GetRotationAngle() const
{
	return m_DrawParameters.RotationAngle;
}

////////////////////////////////////////////////////////////////////////////////
Point DrawObject::GetRotationCenter() const
{
	return m_DrawParameters.RotationCenter;
}

////////////////////////////////////////////////////////////////////////////////
EObjectType DrawObject::GetType()
{
	return m_DrawParameters.ObjectType;
}

////////////////////////////////////////////////////////////////////////////////
EBlendMode DrawObject::GetBlendMode()
{
	return m_DrawParameters.BlendMode;
}

////////////////////////////////////////////////////////////////////////////////
EFlipMode DrawObject::GetFlipMode()
{
	return m_DrawParameters.FlipMode;
}

////////////////////////////////////////////////////////////////////////////////
bool DrawObject::IsVisible() const
{
	return m_DrawParameters.IsVisible;
}

// Setters

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetPos(int32_t x, int32_t y)
{
	m_DrawParameters.Position.x = x;
	m_DrawParameters.Position.y = y;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetPos(const Point& pos)
{
	m_DrawParameters.Position.x = pos.x;
	m_DrawParameters.Position.y = pos.y;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetWidth(int32_t width)
{
	m_DrawParameters.Width = width;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetHeight(int32_t height)
{
	m_DrawParameters.Height = height;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetFrameRect(Rectangle rect)
{
	m_DrawParameters.FrameRect = rect;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetOpacity(int32_t opacity)
{
	m_DrawParameters.Opacity = opacity;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetRotationAngle(int32_t rotationAngle)
{
	m_DrawParameters.RotationAngle = rotationAngle;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetRotationCenter(Point rotationCenter)
{
	m_DrawParameters.RotationCenter = rotationCenter;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetType(EObjectType type)
{
	m_DrawParameters.ObjectType = type;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetBlendMode(EBlendMode mode)
{
	m_DrawParameters.BlendMode = mode;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetFlipMode(EFlipMode mode)
{
	m_DrawParameters.FlipMode = mode;
}

void DrawObject::SetIsVisible(bool visible)
{
	m_DrawParameters.IsVisible = visible;
}

// Others

////////////////////////////////////////////////////////////////////////////////
void DrawObject::MoveUp(int32_t delta)
{
	m_DrawParameters.Position.y -= delta;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::MoveDown(int32_t delta)
{
	m_DrawParameters.Position.y += delta;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::MoveLeft(int32_t delta)
{
	m_DrawParameters.Position.x -= delta;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::MoveRight(int32_t delta)
{
	m_DrawParameters.Position.x += delta;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::ChangeWidthBy(int32_t delta)
{
	m_DrawParameters.Width += delta;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::ChangeHeightBy(int32_t delta)
{
	m_DrawParameters.Height += delta;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::Resize(int32_t width, int32_t height)
{
	m_DrawParameters.Width = width;
	m_DrawParameters.Height = height;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::Resize(int32_t percentage)
{
	m_DrawParameters.Width = m_DrawParameters.Width * percentage / 100;
	m_DrawParameters.Height = m_DrawParameters.Height * percentage / 100;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::ChangeOpacityBy(int32_t delta)
{
	m_DrawParameters.Opacity += delta;
	if (m_DrawParameters.Opacity >= Constants::FullOpacity)
	{
		m_DrawParameters.Opacity = Constants::FullOpacity;
	}
	else if (m_DrawParameters.Opacity <= Constants::ZeroOpacity)
	{
		m_DrawParameters.Opacity = Constants::ZeroOpacity;
	}
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetZeroOpacity()
{
	m_DrawParameters.Opacity = Constants::ZeroOpacity;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::SetMaxOpacity()
{
	m_DrawParameters.Opacity = Constants::FullOpacity;
}

////////////////////////////////////////////////////////////////////////////////
void DrawObject::Rotate(int32_t delta)
{
	m_DrawParameters.RotationAngle += delta;
}

////////////////////////////////////////////////////////////////////////////////
bool DrawObject::ContainsPoint(const Point& point) const
{
	return GetPosRect().IsPointInside(point);
}