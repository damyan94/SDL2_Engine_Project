#include "stdafx.h"

#include "System/Utils/Geometry/Point.h"

////////////////////////////////////////////////////////////////////////////////
const Point Point::Zero			= Point(0, 0);
const Point Point::Undefined	= Point(0xFFFFFFFF, 0xFFFFFFFF);

////////////////////////////////////////////////////////////////////////////////
Point::Point()
	: x(0)
	, y(0)
{
}

////////////////////////////////////////////////////////////////////////////////
Point::Point(int32_t posX, int32_t posY)
	: x(posX)
	, y(posY)
{
}

////////////////////////////////////////////////////////////////////////////////
Point::~Point()
{
}

////////////////////////////////////////////////////////////////////////////////
bool Point::operator==(const Point& other) const
{
	return (this->x == other.x) && (this->y == other.y);
}

////////////////////////////////////////////////////////////////////////////////
bool Point::operator!=(const Point& other) const
{
	return !(*this == other);
}

////////////////////////////////////////////////////////////////////////////////
Point Point::operator+(const Point& other) const
{
	return Point(x + other.x, y + other.y);
}

////////////////////////////////////////////////////////////////////////////////
Point Point::operator-(const Point& other) const
{
	return Point(x - other.x, y - other.y);
}

////////////////////////////////////////////////////////////////////////////////
Point& Point::operator+=(const Point& other)
{
	x += other.x;
	y += other.y;
	return *this;
}

////////////////////////////////////////////////////////////////////////////////
Point& Point::operator-=(const Point& other)
{
	x -= other.x;
	y -= other.y;
	return *this;
}